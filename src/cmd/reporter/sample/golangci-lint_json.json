{
	"Issues": [
		{
			"FromLinter": "unparam",
			"Text": "`connectionNameRules` - `fieldName` always receives `\"name\"`",
			"Severity": "",
			"SourceLines": [
				"func connectionNameRules(name *string, fieldName string) *validation.FieldRules {"
			],
			"Replacement": null,
			"Pos": {
				"Filename": "main.go",
				"Offset": 3632,
				"Line": 70,
				"Column": 40
			},
			"ExpectNoLint": false,
			"ExpectedNoLintLinter": ""
		},
		{
			"FromLinter": "unparam",
			"Text": "`advertiserIDRules` - `fieldName` always receives `\"advertiser_id\"`",
			"Severity": "",
			"SourceLines": [
				"func advertiserIDRules(advertiserID *string, fieldName string) *validation.FieldRules {"
			],
			"Replacement": null,
			"Pos": {
				"Filename": "main.go",
				"Offset": 3978,
				"Line": 71,
				"Column": 40
			},
			"ExpectNoLint": false,
			"ExpectedNoLintLinter": ""
		}
	],
	"Report": {
		"Linters": [
			{
				"Name": "asasalint"
			},
			{
				"Name": "asciicheck"
			},
			{
				"Name": "bidichk"
			},
			{
				"Name": "bodyclose"
			},
			{
				"Name": "canonicalheader"
			},
			{
				"Name": "containedctx"
			},
			{
				"Name": "contextcheck"
			},
			{
				"Name": "copyloopvar"
			},
			{
				"Name": "cyclop"
			},
			{
				"Name": "decorder"
			},
			{
				"Name": "deadcode"
			},
			{
				"Name": "depguard"
			},
			{
				"Name": "dogsled"
			},
			{
				"Name": "dupl",
				"Enabled": true
			},
			{
				"Name": "dupword"
			},
			{
				"Name": "durationcheck"
			},
			{
				"Name": "errcheck",
				"Enabled": true,
				"EnabledByDefault": true
			},
			{
				"Name": "errchkjson"
			},
			{
				"Name": "errname"
			},
			{
				"Name": "errorlint"
			},
			{
				"Name": "execinquery"
			},
			{
				"Name": "exhaustive"
			},
			{
				"Name": "exhaustivestruct"
			},
			{
				"Name": "exhaustruct"
			},
			{
				"Name": "exportloopref"
			},
			{
				"Name": "forbidigo"
			},
			{
				"Name": "forcetypeassert"
			},
			{
				"Name": "fatcontext"
			},
			{
				"Name": "funlen"
			},
			{
				"Name": "gci",
				"Enabled": true
			},
			{
				"Name": "ginkgolinter"
			},
			{
				"Name": "gocheckcompilerdirectives"
			},
			{
				"Name": "gochecknoglobals"
			},
			{
				"Name": "gochecknoinits"
			},
			{
				"Name": "gochecksumtype"
			},
			{
				"Name": "gocognit"
			},
			{
				"Name": "goconst"
			},
			{
				"Name": "gocritic"
			},
			{
				"Name": "gocyclo"
			},
			{
				"Name": "godot"
			},
			{
				"Name": "godox"
			},
			{
				"Name": "err113"
			},
			{
				"Name": "gofmt"
			},
			{
				"Name": "gofumpt",
				"Enabled": true
			},
			{
				"Name": "goheader"
			},
			{
				"Name": "goimports"
			},
			{
				"Name": "golint"
			},
			{
				"Name": "mnd"
			},
			{
				"Name": "gomnd"
			},
			{
				"Name": "gomoddirectives"
			},
			{
				"Name": "gomodguard"
			},
			{
				"Name": "goprintffuncname"
			},
			{
				"Name": "gosec"
			},
			{
				"Name": "gosimple",
				"Enabled": true,
				"EnabledByDefault": true
			},
			{
				"Name": "gosmopolitan"
			},
			{
				"Name": "govet",
				"Enabled": true,
				"EnabledByDefault": true
			},
			{
				"Name": "grouper"
			},
			{
				"Name": "ifshort"
			},
			{
				"Name": "importas"
			},
			{
				"Name": "inamedparam"
			},
			{
				"Name": "ineffassign",
				"Enabled": true,
				"EnabledByDefault": true
			},
			{
				"Name": "interfacebloat"
			},
			{
				"Name": "interfacer"
			},
			{
				"Name": "intrange"
			},
			{
				"Name": "ireturn"
			},
			{
				"Name": "lll"
			},
			{
				"Name": "loggercheck"
			},
			{
				"Name": "maintidx"
			},
			{
				"Name": "makezero"
			},
			{
				"Name": "maligned"
			},
			{
				"Name": "mirror"
			},
			{
				"Name": "misspell",
				"Enabled": true
			},
			{
				"Name": "musttag"
			},
			{
				"Name": "nakedret"
			},
			{
				"Name": "nestif"
			},
			{
				"Name": "nilerr"
			},
			{
				"Name": "nilnil"
			},
			{
				"Name": "nlreturn"
			},
			{
				"Name": "noctx"
			},
			{
				"Name": "nonamedreturns"
			},
			{
				"Name": "nosnakecase"
			},
			{
				"Name": "nosprintfhostport"
			},
			{
				"Name": "paralleltest"
			},
			{
				"Name": "perfsprint"
			},
			{
				"Name": "prealloc"
			},
			{
				"Name": "predeclared"
			},
			{
				"Name": "promlinter"
			},
			{
				"Name": "protogetter"
			},
			{
				"Name": "reassign"
			},
			{
				"Name": "revive"
			},
			{
				"Name": "rowserrcheck"
			},
			{
				"Name": "sloglint"
			},
			{
				"Name": "scopelint"
			},
			{
				"Name": "sqlclosecheck"
			},
			{
				"Name": "spancheck"
			},
			{
				"Name": "staticcheck",
				"Enabled": true,
				"EnabledByDefault": true
			},
			{
				"Name": "structcheck"
			},
			{
				"Name": "stylecheck"
			},
			{
				"Name": "tagalign"
			},
			{
				"Name": "tagliatelle"
			},
			{
				"Name": "tenv"
			},
			{
				"Name": "testableexamples"
			},
			{
				"Name": "testifylint"
			},
			{
				"Name": "testpackage"
			},
			{
				"Name": "thelper"
			},
			{
				"Name": "tparallel"
			},
			{
				"Name": "typecheck",
				"Enabled": true,
				"EnabledByDefault": true
			},
			{
				"Name": "unconvert",
				"Enabled": true
			},
			{
				"Name": "unparam",
				"Enabled": true
			},
			{
				"Name": "unused",
				"Enabled": true,
				"EnabledByDefault": true
			},
			{
				"Name": "usestdlibvars"
			},
			{
				"Name": "varcheck"
			},
			{
				"Name": "varnamelen"
			},
			{
				"Name": "wastedassign"
			},
			{
				"Name": "whitespace",
				"Enabled": true
			},
			{
				"Name": "wrapcheck"
			},
			{
				"Name": "wsl"
			},
			{
				"Name": "zerologlint"
			},
			{
				"Name": "nolintlint"
			}
		]
	}
}